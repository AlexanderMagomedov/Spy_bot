import time
import random

from aiogram import F, Router
from aiogram.types import CallbackQuery
from asgiref.sync import sync_to_async

from telebot.filters.filters import IsGamer
from telebot.handlers.game_settings import give_game
from telebot.handlers.user_handlers import give_words, db_save
from telebot.keyboards.keyboards import create_finish_keyboard, create_game_keyboard, create_double_keyboard
from telebot.lexicon.lexicon_ru import LEXICON_RU


router = Router()


# –≠—Ç X —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ "–ü–æ–µ—Ö–∞–ª–∏" –∏ –∑–∞–ø—É—Å–∫–∞–µ—Ç –∏–≥—Ä—É
@router.callback_query(F.data == 'start_game')
async def process_about_me(callback: CallbackQuery):
    game = await give_game(callback)
    massiv = await give_massiv(game)
    random.shuffle(massiv)
    text_all = '_'.join(str(i[0]) for i in massiv)
    text_after = '_'.join(f'–ò–≥—Ä–æ–∫ ‚Ññ {i+1}' for i in range(len(massiv)))
    for i in range(len(massiv)):
        await callback.message.edit_text(text=f'–ü–æ–∑–¥—Ä–∞–≤–ª—è—é –∏–≥—Ä–∞ –Ω–∞—á–∞–ª–∞—Å—å!!!\n'
                                              f'–í—ã –ò–≥—Ä–æ–∫ ‚Ññ {i+1} üòâ\n{massiv[i][1]}')
        time.sleep(5)
        if i != len(massiv)-1:
            await callback.message.edit_text(text=f'–ü–µ—Ä–µ–¥–∞–π—Ç–µ —Ç–µ–ª–µ—Ñ–æ–Ω —Å–ª–µ–¥—É—é—â–µ–º—É –∏–≥—Ä–æ–∫—É. üì± ‚û° ü¶æ')
            time.sleep(5)
    game.rez = text_all
    game.after = text_after
    await db_save(game)
    await callback.message.edit_text(
        text=f'üåü –í—Å–µ —Ä–æ–ª–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã ‚Äì –Ω–∞—Å—Ç—É–ø–∏–ª–æ –≤—Ä–µ–º—è –≤–µ–ª–∏–∫–∏—Ö –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π! '
             f'–ù–∞—á–∏–Ω–∞–π—Ç–µ –æ–±—Å—É–∂–¥–µ–Ω–∏–µ –∫—Ç–æ –∂–µ –∏–∑ –≤–∞—Å –®–ø–∏–æ–Ω?!',
        reply_markup=create_finish_keyboard(text_after))
    await callback.answer()


# –≠—Ç X —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ "–ó–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É" –≤—ã–≤–æ–¥–∏—Ç—å —Å–ª–æ–≤–∞ –∏ –ø—Ä–µ–¥–ª–∞–≥–∞—Ç—å –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É –∑–∞–Ω–æ–≤–æ.
@router.callback_query(F.data == 'finish')
async def process_about_me(callback: CallbackQuery):
    game = await give_game(callback)
    word = await give_word1_word2(game)
    game_rez = str()
    game_list = [i for i in game.rez.split('_')]
    for i in range(len(game_list)):
        game_rez += f'–ò–≥—Ä–æ–∫ ‚Ññ{i+1} - {game_list[i]}\n'

    await callback.message.edit_text(
        text=f'–£–†–ê!!!üî•üî•üî• \n–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ ¬´{word[0].upper()}¬ª.\n'
             f'–°–ª–æ–≤–æ –ó–∞–±—ã–≤—á–∏–≤–æ–≥–æ —à–ø–∏–æ–Ω–∞ ¬´{word[1].upper()}¬ª.\n' 
             f'{game_rez}'
             f'–î–∞–≤–∞–π—Ç–µ —Å—ã–≥—Ä–∞–µ–º –µ—â–µ —Ä–∞–∑ —Ç–µ–º –∂–µ —Å–æ—Å—Ç–∞–≤–æ–º‚ùì‚ùó',
        reply_markup=create_double_keyboard('/game'))
    await callback.answer()


@sync_to_async
def give_word1_word2(game):
    return [game.word.word1, game.word.word2]


@sync_to_async
def give_massiv(game):
    massiv = []
    for i in range(1, game.peace+1):
        massiv.append(['–ú–∏—Ä–Ω—ã–π –∂–∏—Ç–µ–ª—å', f'–í–∞—à–µ —Å–ª–æ–≤–æ ¬´{game.word.word1.upper()}¬ª.'])
    for i in range(game.peace+1, game.peace + game.spy+1):
        massiv.append(['–®–ø–∏–æ–Ω', f'–£ –í–∞—Å –Ω–µ—Ç —Å–ª–æ–≤–∞, –≤—ã –®–ø–∏–æ–Ω. üïµÔ∏è'])
    for i in range(game.peace + game.spy+1, game.peace + game.spy + game.undercover+1):
        massiv.append(['–ó–∞–±—ã–≤—á–∏–≤—ã–π —à–ø–∏–æ–Ω', f'–í–∞—à–µ —Å–ª–æ–≤–æ ¬´{game.word.word2.upper()}¬ª.'])
    return massiv


# –≠—Ç X —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞ –Ω–∞–∂–∞—Ç–∏–µ –∏–Ω–ª–∞–π–Ω-–∫–Ω–æ–ø–∫–∏ "–ù–æ–≤–æ–µ —Å–ª–æ–≤–æ" –º–µ–Ω—è–µ—Ç —Å–ª–æ–≤–æ –¥–ª—è —Ç–æ–π –∂–µ –∏–≥—Ä—ã
@router.callback_query(F.data == '/new_word')
async def process_about_me(callback: CallbackQuery):
    game = await give_game(callback)
    game.word_id = await give_words()
    await db_save(game)
    await callback.message.edit_text(text=LEXICON_RU['/game'], reply_markup=create_game_keyboard(game))
    await callback.answer()


#–≠—Ç–æ—Ç —Ö–µ–Ω–¥–ª–µ—Ä –±—É–¥–µ—Ä —Ä–∞—Å–∫—Ä—ã–≤–∞—Ç—å —Ä–æ–ª—å –∏–≥—Ä–æ–∫–∞
@router.callback_query(IsGamer())
async def process_show_gamer_press(callback: CallbackQuery):
    game = await give_game(callback)
    game_list_rez = [i for i in game.rez.split('_')]
    game_list_after = [i for i in game.after.split('_')]
    game_list_after[int(callback.data.split()[2])-1] = game_list_rez[int(callback.data.split()[2])-1]
    text_after = '_'.join(i for i in game_list_after)
    game.after = text_after
    await db_save(game)
    await callback.message.edit_text(
        text=f'üåü –í—Å–µ —Ä–æ–ª–∏ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω—ã ‚Äì –Ω–∞—Å—Ç—É–ø–∏–ª–æ –≤—Ä–µ–º—è –≤–µ–ª–∏–∫–∏—Ö –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–π! '
             f'–ù–∞—á–∏–Ω–∞–π—Ç–µ –æ–±—Å—É–∂–¥–µ–Ω–∏–µ –∫—Ç–æ –∂–µ –∏–∑ –≤–∞—Å –®–ø–∏–æ–Ω?!\n'
             f'–í—ã —Ä–µ—à–∏–ª–∏ –∏–∑–±–∞–≤–∏—Ç—å—Å—è –æ—Ç –∏–≥—Ä–æ–∫–∞ ‚Ññ {callback.data.split()[2]} üíî üî´',
        reply_markup=create_finish_keyboard(text_after))
    await callback.answer()
